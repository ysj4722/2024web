/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.86
 * Generated at: 2024-03-12 23:11:36 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.bakery;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>로그인창</title>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"style.css\" type=\"text/css\">\r\n");
      out.write("    <style>\r\n");
      out.write("        body{\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            background-color: #ffffff;\r\n");
      out.write("            /*공통 스타일시트->파일로 불러오기\r\n");
      out.write("            2. 특정페이지에서 사용하는 경우->style태그를 사용해서 적용시키기\r\n");
      out.write("            */\r\n");
      out.write("        }\r\n");
      out.write("        table{\r\n");
      out.write("            /*\r\n");
      out.write("            border:1px solid black; 영역을 잡아줄 테두리를 보여주기 위함\r\n");
      out.write("            margin-left:230px;\r\n");
      out.write("            */\r\n");
      out.write("            margin: 0 auto;\r\n");
      out.write("        }\r\n");
      out.write("    .div_main{\r\n");
      out.write("  background-color: white;\r\n");
      out.write("  border:1px solid #aaaaaa; \r\n");
      out.write("	width:1200px; \r\n");
      out.write("	height:592px; \r\n");
      out.write("	margin:0 auto;\r\n");
      out.write("}\r\n");
      out.write("            .ft1{\r\n");
      out.write("  clear: both;\r\n");
      out.write("  position: relative;\r\n");
      out.write("  width:1200px; \r\n");
      out.write("	height:auto; \r\n");
      out.write("  border:1px solid #aaaaaa; \r\n");
      out.write("  margin: 0 auto;\r\n");
      out.write("  right: 1px;\r\n");
      out.write("  z-index: 8;\r\n");
      out.write("  top: 364px;\r\n");
      out.write("}\r\n");
      out.write(".nv3 > ul{\r\n");
      out.write("  position: relative;\r\n");
      out.write("  list-style: none;\r\n");
      out.write("  margin: 0 auto;\r\n");
      out.write("  top: 20px;\r\n");
      out.write("  height: 20px;\r\n");
      out.write("  width: 300px;\r\n");
      out.write("}\r\n");
      out.write(".nv3 > ul >li{\r\n");
      out.write("  float: left;\r\n");
      out.write("  margin-left: 4.3%;\r\n");
      out.write("  font-family: fantasy;\r\n");
      out.write("}\r\n");
      out.write(".nv3 ul li a{\r\n");
      out.write("  text-decoration: none;\r\n");
      out.write("}\r\n");
      out.write(".nv4 ul{\r\n");
      out.write("  position: relative;\r\n");
      out.write("  height: 100px;\r\n");
      out.write("  top: 50px;\r\n");
      out.write("  margin: 0 auto;\r\n");
      out.write("}\r\n");
      out.write(".nv4 > ul >li{\r\n");
      out.write("  position: relative;\r\n");
      out.write("  list-style: none;\r\n");
      out.write("  float: left;\r\n");
      out.write("  width: 20%;\r\n");
      out.write("  font-family: fantasy;\r\n");
      out.write("  font-size: 10px;\r\n");
      out.write("  \r\n");
      out.write("}\r\n");
      out.write("    </style>\r\n");
      out.write("    <script src=\"script.js\">\r\n");
      out.write("    </script>\r\n");
      out.write("    <!--\r\n");
      out.write("        window.onload=function(){\r\n");
      out.write("            document.login.mem_id.focus();\r\n");
      out.write("        }\r\n");
      out.write("    -->\r\n");
      out.write("</head>\r\n");
      out.write("<body onload=\"document.login.mem_id.focus()\">\r\n");
      out.write("<div class=\"div_main\">\r\n");
      out.write("    <!--\r\n");
      out.write("    디자인=>table+input box(form)\r\n");
      out.write("        table>tr*4>td*2\r\n");
      out.write("    -->\r\n");
      out.write("    <!--<center>-->\r\n");
      out.write("     <a href=\"main.jsp\"><img src=\"../imgs/logo.png\" width=\"300px\" style=\"left: 00px;\"></a>\r\n");
      out.write("        <table><!--form:post-->\r\n");
      out.write("            <form name=\"login\" action=\"LoginProc.jsp\" method=\"post\">\r\n");
      out.write("            <tr><!--로그인 타이틀명-->\r\n");
      out.write("                <td align=\"center\" colspan=\"2\"><h4>로그인</h4></td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            <tr><!--아이디 input:text\r\n");
      out.write("            label 태그를 사용해서 레이블명과 입력박스를 연결시키는 방법\r\n");
      out.write("            형식) <label label for=\"연결시킬 id값\">레이블명</label>\r\n");
      out.write("            -->\r\n");
      out.write("                <td><label for=\"id\">아이디</label></td>\r\n");
      out.write("                <td><input type=\"text\" name=\"mem_id\" id=\"id\"></td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            <tr>\r\n");
      out.write("                <td>비밀번호</td><!--비번 input:text-->\r\n");
      out.write("                <td><input type=\"password\" name=\"mem_pwd\"></td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            <tr><!--정가운데 버튼 2개 배치input:button 나머지 td영역까지 포함해서 가운데 배치-->\r\n");
      out.write("                <td align=\"center\" colspan=\"2\">\r\n");
      out.write("                    <input type=\"button\" value=\"로그인\" onclick=\"loginCheck()\">&nbsp;\r\n");
      out.write("                    <input type=\"button\" value=\"회원가입\" onclick=\"document.location.href='agreement.jsp'\">\r\n");
      out.write("                </td>\r\n");
      out.write("                <!--<td align=\"center\"><input type=\"button\" value=\"회원가입\"></td>-->\r\n");
      out.write("            </tr>\r\n");
      out.write("            </form>\r\n");
      out.write("        </table>\r\n");
      out.write("\r\n");
      out.write("    <!--</center>-->\r\n");
      out.write("          <footer class=\"ft1\">\r\n");
      out.write("            <nav class=\"nv3\">\r\n");
      out.write("                <ul>\r\n");
      out.write("                    <li><a href=\"#\">HOME</a></li>\r\n");
      out.write("                    <li><a href=\"|1\">|</a></li>\r\n");
      out.write("                    <li><a href=\"\">TERMS</a></li>\r\n");
      out.write("                    <li><a href=\"|1\">|</a></li>\r\n");
      out.write("                    <li><a href=\"\">BAKERY</a></li>\r\n");
      out.write("                </ul>\r\n");
      out.write("            </nav>\r\n");
      out.write("            <nav class=\"nv4\">\r\n");
      out.write("                <ul>\r\n");
      out.write("                    <li>OWNER: Sweet Devils Baking</li>\r\n");
      out.write("                    <li>E-mail:happyhome@sweet.kr</li>\r\n");
      out.write("                    <li>TELL:032-345-6789</li>\r\n");
      out.write("                    <li>ADDRESS:인천광역시 00구 00동</li>\r\n");
      out.write("                    <li>BUSINESS LICENSE:2719619328</li>\r\n");
      out.write("                </ul>\r\n");
      out.write("            </nav>\r\n");
      out.write("        </footer>\r\n");
      out.write("        </div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
